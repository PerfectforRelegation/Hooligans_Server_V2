spring:
  application:
    name: api-gateway
  profiles:
    active: local
    group:
      local:
        - common
      prod:
        - common

---
spring:
  config:
    activate:
      on-profile: common
    import: optional:file:.env[.properties]

  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

  data:
    mongodb:
      uri: ${MONGO_DB_URI}

  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials

      routes:
        - id: login-session
          uri: lb://core-service
          predicates:
            - Path=/core/kakao/users/auth
          filters:
            - StripPrefix=1

        - id: core
          uri: lb://core-service
          predicates:
            - Path=/core/**
          filters:
            - StripPrefix=1

        - id: coin
          uri: lb://coin-service
          predicates:
            - Path=/coin/**
          filters:
            - StripPrefix=1

        # Default fallback route for unmatched paths
        - id: fallback-route
          uri: no://op
          predicates:
            - Path=/**
          filters:
            - name: SetStatus
              args:
                status: 404

logging:
  level:
    org.springframework.cloud.gateway: debug
    org.springframework.cloud.netflix.eureka: debug

server:
  port: 8080

jwt:
  secret-key: ${JWT_SECRET_KEY}

---
spring:
  config:
    activate:
      on-profile: local

  r2dbc:
    url: ${LOCAL_DB_URI}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}

  data:
    redis:
      host: ${LOCAL_REDIS_HOST}
      port: ${LOCAL_REDIS_PORT}
      password: ${LOCAL_REDIS_PASSWORD}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "http://localhost:8087/eureka"

---
spring:
  config:
    activate:
      on-profile: prod

  r2dbc:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL}
